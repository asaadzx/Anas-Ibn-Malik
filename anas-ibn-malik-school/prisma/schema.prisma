generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Students {
  student_id  Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  national_id String   @unique @db.VarChar(20)
  password    String   @db.VarChar(255)
  phone       String?  @db.VarChar(15)
  gmail       String?  @unique @db.VarChar(100)
  created_at  DateTime @default(now()) @db.Timestamp

  Student_Classes Student_Classes[]
}

model Teachers {
  teacher_id Int      @id @default(autoincrement())
  name       String   @db.VarChar(100)
  password   String   @db.VarChar(255)
  phone      String?  @db.VarChar(15)
  gmail      String?  @unique @db.VarChar(100)
}

model Classes {
  class_id   Int      @id @default(autoincrement())
  class_name String   @db.VarChar(50)
  year       Int
  grade      String   @db.VarChar(10)

  Exams          Exams[]
  Student_Classes Student_Classes[]
}

model Exams {
  exam_id   Int      @id @default(autoincrement())
  exam_name String   @db.VarChar(100)
  class_id  Int
  exam_date DateTime @db.Date

  Classes Classes @relation(fields: [class_id], references: [class_id], onDelete: Cascade)
  Exam_Results Exam_Results[]
}

model Student_Classes {
  student_class_id Int @id @default(autoincrement())
  student_id       Int
  class_id         Int

  Students Students @relation(fields: [student_id], references: [student_id], onDelete: Cascade)
  Classes  Classes  @relation(fields: [class_id], references: [class_id], onDelete: Cascade)
  Exam_Results Exam_Results[]
}

model Exam_Results {
  result_id         Int     @id @default(autoincrement())
  student_class_id  Int
  exam_id           Int
   score            Decimal?  @db.Decimal(5, 2)

  Student_Classes Student_Classes @relation(fields: [student_class_id], references: [student_class_id], onDelete: Cascade)
  Exams           Exams           @relation(fields: [exam_id], references: [exam_id], onDelete: Cascade)
}
